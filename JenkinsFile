pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    stages {
        stage('Checkout') {
            steps {
                echo "Workspace Path: ${WORKSPACE}"
                sh 'echo passed'
                git branch: 'main', credentialsId: 'Github-Credentials', url: 'https://github.com/Mubbaseer-Makrod/spring-boot-app'
            }
        }
        stage('Build and Test') {
            steps {
                sh 'pwd && ls -ltr'
                sh 'mvn clean package'
            }
        }
        stage("SonarQube Analysis") {
            steps {
                script {
                    withSonarQubeEnv(credentialsId: 'Sonarqube-Credentials') {
                        sh 'mvn sonar:sonar'
                    }
                }
            }
        }
        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "mubbaseer/ultimate-cicd:${BUILD_NUMBER}"
                REGISTRY_CREDENTIALS = credentials('Dockerhub-Credentials')
            }
            steps {
                script {
                    sh 'docker build -t ${DOCKER_IMAGE} .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "Dockerhub-Credentials") {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "spring-boot-app"
                GIT_USER_NAME = "Mubbaseer-Makrod"
            }
            steps {
                // Configure Git user information
                sh 'git config user.email "mubbaseermakrod567@gmail.com"'
                sh 'git config user.name "Mubbaseer-Makrod"'

                // Stage and commit changes
                sh 'git add spring-boot-app-manifests/deployment.yml'
                sh 'git commit -m "Update deployment image to version ${BUILD_NUMBER}"'

                // Push changes to GitHub
                withCredentials([usernamePassword(credentialsId: 'Github-Credentials', username: 'USERNAME', password: 'PASSWORD')]) {
                    sh "git push https://${USERNAME}:${PASSWORD}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main"
                }
            }
        }
    }
}
